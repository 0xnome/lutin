@startuml
skinparam monochrome true
skinparam shadowing false
skinparam TitleFontSize 20
skinparam sequenceTitleFontSize 20
skinparam sequenceTitleFontStyle plain

skinparam class {
	BackgroundColor white
	BackgroundColor<<Warning>> lightblue
}

title Diagramme de classe

class Symbole{
	~int id
	+Symbole (int id)
	+operator int() const
	+void exectuer()
	+void afficher()
	+void analyser()
	+void optimiser()
}

class VirguleTerminal
class EgalTerminal
Class PointVirguleTerminal
class ConstTerminal
class VarTerminal
class EgalTerminal
class IdTerminal{
  +String IdName
}
class NumTerminal{
  +Int Value
}
class FinProgramme
class ErreurLexicale

class AffectationConstante{
	+AffectationConstante suivant
}
class IdentificateurVariable{
	+IdentificateurVariable suivant
}
class IdentificateurFacteur
class BlocDeclaration {
    +BlocDeclaration suivant
}
class DeclarationVariable
class DeclarationConstante
class Programme{
    +setBlockInstruction()
    +setBlockDeclaration()
}
class BlocInstruction {
    +BlocInstruction suivant
}
class InstructionLecture
class InstructionEcriture
class InstructionAffectation
class Expression
class ExpressionAdditive
class ExpressionSoustractive
class Terme
class ExpressionMult
class ExpressionDiv
class Facteur
class ExpressionParenthesee
class ConstanteNumerique

Symbole <|-- Programme
Symbole <|-- BlocDeclaration
Symbole <|-- BlocInstruction
Symbole <|-- AffectationConstante
Symbole <|-- IdentificateurVariable
Symbole <|-- Expression
Symbole <|-- VirguleTerminal
Symbole <|-- PointVirguleTerminal
Symbole <|-- ConstTerminal
Symbole <|-- VarTerminal
Symbole <|-- EgalTerminal
Symbole <|-- IdTerminal
Symbole <|-- NumTerminal
Symbole <|-- FinProgramme
Symbole <|-- ErreurLexicale

Programme *-- BlocDeclaration
Programme *-- BlocInstruction

BlocDeclaration <|-- DeclarationVariable
BlocDeclaration <|-- DeclarationConstante

IdentificateurVariable --* DeclarationVariable

AffectationConstante --* DeclarationConstante


BlocInstruction <|-- InstructionLecture
BlocInstruction <|-- InstructionEcriture
BlocInstruction <|-- InstructionAffectation

InstructionLecture *-- IdTerminal : id
InstructionAffectation *-- IdTerminal : id

InstructionEcriture *-- Expression
InstructionAffectation *-- Expression

Expression <|-- ExpressionAdditive
ExpressionAdditive *-- Expression
Expression <|-- ExpressionSoustractive
ExpressionSoustractive *-- Expression
Expression <|-- Terme
ExpressionParenthesee *-- Expression

ExpressionAdditive *-- Terme
ExpressionSoustractive *-- Terme
ExpressionMult *-- Terme
Terme <|-- ExpressionMult
ExpressionDiv *-- Terme
Terme <|-- ExpressionDiv
Terme <|-- Facteur

Facteur <|-- ExpressionParenthesee
ExpressionMult *-- Facteur
ExpressionDiv *-- Facteur
Facteur <|-- ConstanteNumerique
Facteur <|-- IdentificateurFacteur

AffectationConstante *-- IdTerminal : id
AffectationConstante *-- NumTerminal : valeur
IdentificateurVariable *-- IdTerminal : id
ConstanteNumerique *-- NumTerminal : valeur
IdentificateurFacteur *-- IdTerminal : id
@enduml