@startuml
skinparam monochrome true
skinparam shadowing false
skinparam TitleFontSize 20
skinparam sequenceTitleFontSize 20
skinparam sequenceTitleFontStyle plain

skinparam class {
	BackgroundColor white
	BackgroundColor<<Warning>> lightblue
}

title Diagramme de classe

class Symbole{
	~int id
	+Symbole (int id)
	+operator int() const
	+void exectuer()
	+void afficher()
	+void analyser()
	+void optimiser()
}
class VirguleTerminal
class EgalTerminal
Class PointVirguleTerminal
class ConstTerminal
class VarTerminal
class EgalTerminal
class IdTerminal{
  +String IdName
}
class NumTerminal{
  +Int Value
}
class FinProgramme
class ErreurLexicale

class AffectationConstante{
	+AffectationConstante suivant
}
class IdentificateurVariable{
	+IdentificateurVariable suivant
}
class IdentificateurFacteur
class BlocDeclaration {
    +BlocDeclaration suivant
}
class DeclarationVariable
class DeclarationConstante
class Programme{
    +setBlockInstruction()
    +setBlockDeclaration()
}
class BlocInstruction {
    +BlocInstruction suivant
}
class InstructionLecture
class InstructionEcriture
class InstructionAffectation
class Expression
class ExpressionAdditive
class ExpressionSoustractive
class Terme
class ExpressionMult
class ExpressionDiv
class Facteur
class ExpressionParenthesee
class ConstanteNumerique


AffectationConstante *-- IdTerminal : id
AffectationConstante *-- NumTerminal : valeur

BlocDeclaration <|-- DeclarationConstante
BlocDeclaration <|-- DeclarationVariable
BlocInstruction <|-- InstructionAffectation
BlocInstruction <|-- InstructionEcriture
BlocInstruction <|-- InstructionLecture

ConstanteNumerique *-- NumTerminal : valeur

DeclarationConstante *-- AffectationConstante

DeclarationVariable *-- IdentificateurVariable

Expression <|-- ExpressionAdditive
Expression <|-- ExpressionSoustractive
Expression <|-- Terme

ExpressionAdditive *-- Expression
ExpressionAdditive *-- Terme

ExpressionDiv *-- Facteur
ExpressionDiv *-- Terme

ExpressionMult *-- Facteur
ExpressionMult *-- Terme

ExpressionParenthesee *-- Expression

ExpressionSoustractive *-- Expression
ExpressionSoustractive *-- Terme

Facteur <|-- ConstanteNumerique
Facteur <|-- ExpressionParenthesee
Facteur <|-- IdentificateurFacteur

IdentificateurFacteur *-- IdTerminal : id

IdentificateurVariable *-- IdTerminal : id

InstructionAffectation *-- Expression
InstructionAffectation *-- IdTerminal : id

InstructionEcriture *-- Expression

InstructionLecture *-- IdTerminal : id

Programme *-- BlocDeclaration
Programme *-- BlocInstruction

Symbole <|-- AffectationConstante
Symbole <|-- BlocDeclaration
Symbole <|-- BlocInstruction
Symbole <|-- ConstTerminal
Symbole <|-- EgalTerminal
Symbole <|-- ErreurLexicale
Symbole <|-- Expression
Symbole <|-- FinProgramme
Symbole <|-- IdentificateurVariable
Symbole <|-- IdTerminal
Symbole <|-- NumTerminal
Symbole <|-- PointVirguleTerminal
Symbole <|-- Programme
Symbole <|-- VarTerminal
Symbole <|-- VirguleTerminal

Terme <|-- ExpressionDiv
Terme <|-- ExpressionMult
Terme <|-- Facteur

@enduml