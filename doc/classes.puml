@startuml
skinparam monochrome true
skinparam shadowing false
skinparam TitleFontSize 20
skinparam sequenceTitleFontSize 20
skinparam sequenceTitleFontStyle plain

skinparam class {
	BackgroundColor white
	BackgroundColor<<Warning>> lightblue
}

title Diagramme de classe

class Symbole{
	~int id
	+Symbole (int id)
	+operator int() const
	+void exectuer()
	+void afficher()
	+void analyser()
	+void optimiser()
}
class VirguleTerminal
class EgalTerminal
Class PointVirguleTerminal
class ConstTerminal
class VarTerminal
class EgalTerminal
class LireTerminal
class EcrireTerminal
class PlusTerminal
class MoinsTerminal
class MultTerminal
class DivTerminal
class AffectTerminal
class ParOuvTerminal
class ParFerTerminal
class IdTerminal{
  +String IdName
}
class NumTerminal{
  +Int Value
}
class FinProgramme
class ErreurLexicale

class AffectationConstante{
	+AffectationConstante suivant
}
class IdentificateurVariable{
	+IdentificateurVariable suivant
}
class IdentificateurFacteur
class BlocDeclaration {
    +BlocDeclaration suivant
}
class DeclarationVariable
class DeclarationConstante
class Programme{
}
class BlocInstruction {
    +BlocInstruction suivant
}
class InstructionLecture
class InstructionEcriture
class InstructionAffectation
class Expression
class ExpressionAdditive
class ExpressionSoustractive
class Terme
class ExpressionMult
class ExpressionDiv
class Facteur
class ExpressionParenthesee
class ConstanteNumerique


AffectationConstante *-- IdTerminal : id
AffectationConstante *-- NumTerminal : valeur

BlocDeclaration <|-- DeclarationConstante
BlocDeclaration <|-- DeclarationVariable
BlocInstruction <|-- InstructionAffectation
BlocInstruction <|-- InstructionEcriture
BlocInstruction <|-- InstructionLecture

ConstanteNumerique *-- NumTerminal : valeur

DeclarationConstante *-- AffectationConstante

DeclarationVariable *-- IdentificateurVariable

Expression <|-- ExpressionAdditive
Expression <|-- ExpressionSoustractive
Expression <|-- Terme

ExpressionAdditive *-- Expression
ExpressionAdditive *-- Terme

ExpressionDiv *-- Facteur
ExpressionDiv *-- Terme

ExpressionMult *-- Facteur
ExpressionMult *-- Terme

ExpressionParenthesee *-- Expression

ExpressionSoustractive *-- Expression
ExpressionSoustractive *-- Terme

Facteur <|-- ConstanteNumerique
Facteur <|-- ExpressionParenthesee
Facteur <|-- IdentificateurFacteur

IdentificateurFacteur *-- IdTerminal : id

IdentificateurVariable *-- IdTerminal : id

InstructionAffectation *-- Expression
InstructionAffectation *-- IdTerminal : id

InstructionEcriture *-- Expression

InstructionLecture *-- IdTerminal : id

Programme *-- BlocDeclaration
Programme *-- BlocInstruction

Symbole <|-- AffectationConstante
Symbole <|-- BlocDeclaration
Symbole <|-- BlocInstruction
Symbole <|-- ErreurLexicale
Symbole <|-- Expression
Symbole <|-- FinProgramme
Symbole <|-- IdentificateurVariable
Symbole <|-- Programme
Symbole <|-- IdTerminal
Symbole <|-- NumTerminal
Symbole <|-- PointVirguleTerminal
Symbole <|--- ConstTerminal
Symbole <|-- VarTerminal
Symbole <|--- EgalTerminal
Symbole <|--VirguleTerminal
Symbole <|--- LireTerminal
Symbole <|-- EcrireTerminal
Symbole <|--- PlusTerminal
Symbole <|-- MoinsTerminal
Symbole <|--- MultTerminal
Symbole <|-- DivTerminal
Symbole <|--- AffectTerminal
Symbole <|-- ParOuvTerminal
Symbole <|--- ParFerTerminal

Terme <|-- ExpressionDiv
Terme <|-- ExpressionMult
Terme <|-- Facteur

@enduml